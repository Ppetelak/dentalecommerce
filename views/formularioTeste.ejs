<!DOCTYPE html>
<html lang="en">
    <!-- ENVIO DE DOCUMENTOS  -->

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mount Hermon - Contratação Dental</title>

    <!-- IMPORTAÇÕES JQUERY  -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <!-- Adicione este link no head do seu HTML -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <!-- IMPORTAÇÕES BOOTSTRAP  -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
        integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
        crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css" integrity="sha384-b6lVK+yci+bfDmaY1u0zE8YYJt0TZxLEAFyYSLHId4xoVvsrQu3INevFKo+Xir8e" crossorigin="anonymous">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    
    <link rel="stylesheet" href="./css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@100;200;300;500;900&display=swap" rel="stylesheet">

</head>
<style>
    *{
        margin: 0;
        padding: 0;
    }

    *::before, ::after{
        box-sizing: border-box;
    }

    body {
        font-size: 14px;
        font-weight: 400;
        color: #585858;
        background: hsl(235deg 100% 93% / 50%);
    }

    ul{
        list-style: none;
    }
    .container{
        max-width: 500px;
        width: 100%;
        margin: 10em auto;
        padding: 0 20px;
    }
    .file-upload {
        position: relative;
        width: 100%;
        margin: 0 auto;
        padding: 7em 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.5em;
        background-color: hsl(235deg 100% 99%);
        box-shadow: hsl(235deg 100% 78% / 30%) 0 25px 50px -12px;
    }
    .file-upload input {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
        z-index: 10;
    }
    .file-upload .icon {
        position: relative;
        margin-bottom: 5em;
    }
    .file-upload .icon ion-icon {
        font-size: 4em;
        color: white;
        z-index: 1;
        position: relative;
    }
    .file-upload .icon::before, .file-upload .icon::after {
        content: ' ';
        width: 56px;
        height: 56px;
        position: absolute;
        left: 0;
        top: 0;
        border-radius: 50%;
        border: 3px solid hsla(235, 100%, 70%, 1);
        background-color: hsla(235, 100%, 95%, 1);
        transform: scale(1.5);
        z-index: 1;
    }

    .file-upload .icon::after {
        border: 0;
        transform: scale(2.5);
        z-index: 0;
        background-color: hsla(235, 100%, 95%, 1);
    }

    .file-upload h3{
        font-weight: 400;
        font-size: 1.5em;
        color: hsla(235, 100%, 70%, 1);
    }

    .file-upload button {
        border: 0;
        outline: 0;
        border-radius: 50%;
        color: white;
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: hsla(235, 100%, 70%, 1);
        box-shadow: hsla(222, 100%, 67%, 1) 0 4px 18px;
        transition: all .3s ease-out;
    }

    .file-upload button ion-icon {
        font-size: 1.5em;
        transform: rotate(45deg);
    }
    .file-upload:hover button {
        transform: translateY(-10px);
    }
    .list-upload {
        padding: 0 2em;
    }
    .list-upload ul li {
        position: relative;
        display: flex;
        margin: 3em 0;
        padding-right: 2em;
    }
    .list-upload .thumbnail {
        position: relative;
        width: 50px;
        height:  50px;
        margin-right: 20px;
        border-radius: 7px;
        background-color: hsla(235, 100%, 70%, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
    }

    .list-upload .thumbnail > ion-icon {
        font-size: 2em;
        color:hsla(235, 100%, 99%, 1);
        display: none;
    }

    .file-list:where(.file .application .text) .thumbnail > [name="document-outline"],
    .file-list.image .thumbnail > [name="image-outline"],
    .file-list.video .thumbnail > [name="videocam-outline"],
    .file-list.image .thumbnail > [name="musical-outline"] {
        display: block;
    }

    .list-upload .thumbnail .completed {
        position: absolute;
        top: 50%;
        right: -10px;
        margin-top: -10px;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background-color: #2ecc71;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .list-upload .properties {
        display: flex;
        flex-direction: column;
        flex-basis: 100%;
        gap: 5px;
    }

    .list-upload .properties .title {
        word-break: break-word;
    }

    .list-upload .properties .size {
        color: #bf98ff;
        font-size: 12px;
    }

    .list-upload .properties :where(.progress, .buffer) {
        position: relative;
        display: block;
        width: 100%;
        height: 14px;
        background-color: hsla(235, 100%, 95%, 1);
    }
    .list-upload .properties .buffer {
        width: 90%;
        background: linear-gradient(90deg, #82f4b1 0%, #2ecc71 100%);
    }
    .list-upload .properties .percentage {
        position: absolute;
        left: 0;
        top: 7px;
        font-size: 10px;
    }

    .list-upload .remove {
        position: absolute;
        right: 0;
        top: 50%;
        border: 0;
        outline: 0;
        width: 20px;
        height: 20px;
        margin-top: -10px;
        border-radius: 50%;
        background: red;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 3s ease-out;
    }

</style>

<body>
    <div id="page" class="site">
        <div class="container">
            <div class="file-upload"> 1
                <input type="file" name="file-input" class="file-input" multiple="multiple">
                <div class="icon">
                    <ion-icon name="arrow-up-outline"></ion-icon>
                </div>
                <h3>Arraste e solte os arquivos aqui</h3>
                <span> Ou </span>
                <strong> Procurar </strong>
                <button class="remove">
                    <ion-icon name="close"></ion-icon>
                </button>
            </div>
            <div class="list-upload">
                <ul>
                </ul>
            </div>
            </div>
        </div>
    </div>
</body>
<script>
document.querySelector('.file-input').addEventListener('change', function () {
    let allowed_mime_types = [];
    let allowed_size_mb = 100;

    var files_input = document.querySelector('.file-input').files;

    if (files_input.length == 0) {
        alert('Error: No file selected');
        return;
    }

    for (i = 0; i < files_input.length; i++) {
        let file = files_input[i];

        if (file.size > allowed_size_mb * 1024 * 1024) {
            alert('Error: Exceed size => ' + file.name);
            return;
        }

        let uniq = 'id-' + btoa(file.name).replace(/=/g, '').substring(0, 7);
        let filetype = file.type.match(/([^\/]+)\//) / allowed_mime_types;

        let li = `
            <li class="file-list ${filetype[i]}" id="${uniq}">
                <div class="thumbnail">
                    <ion-icon name="document-outline"></ion-icon>
                    <ion-icon name="image-outline"></ion-icon>
                    <ion-icon name="musical-notes-outline"></ion-icon>
                    <ion-icon name="videocam-outline"></ion-icon>
                    <span class="completed">
                        <ion-icon name="checkmark"></ion-icon>
                    </span>
                </div>
                <div class="properties">
                    <span class="title"><strong></strong></span>
                    <span class="size"></span>
                    <span class="progress">
                        <span class="buffer"></span>
                        <span class="percentage">0%</span>
                    </span>
                </div>
                <button class="remove" onclick="remove(this)">
                    <ion-icon name="close"></ion-icon>
                </button>
            </li>
            `;

        document.querySelector('.list-upload ul').innerHTML = li + document.querySelector('.list-upload ul').innerHTML;
        let li_el = document.querySelector('#' + uniq);

        let name = li_el.querySelector('.title strong');
        let size = li_el.querySelector('.size');

        name.innerHTML = file.name;
        size.innerHTML = bytesToSize(file.size);

        var data = new FormData();
        data.append('file', file);

        // Modificação para usar axios para enviar a requisição
        axios.post('/upload', data, {
            onUploadProgress: function(progressEvent) {
                let percent = Math.round((progressEvent.loaded * 100) / progressEvent.total);
                li_el.querySelector('.buffer').style.width = percent + '%';
                li_el.querySelector('.percentage').innerHTML = percent + '%';

                if (progressEvent.loaded === progressEvent.total) {
                    li_el.querySelector('.completed').style.display = li_el.querySelector('.remove').style.display = 'flex';
                }
            }
        })
        .then(response => {
            const fileData = response.data.filepaths[0];

            const originalName = fileData.originalName;
            const modifiedName = fileData.modifiedName;

            const li_el = document.querySelector(`[data-filename="${originalName}"]`);
            li_el.dataset.fileNameBack = modifiedName;
        })
        .catch(error => {
            console.error(error);
        });
    }
});


function remove(button) {
    // Obter o elemento li correspondente
    const li = button.closest('.file-list');

    // Obter o valor do atributo data-file-name-back
    const modifiedFileName = li.dataset.fileNameBack;

    // Enviar o valor para a rota de remoção usando o Axios
    axios.post('/remove', { removefile: modifiedFileName })
        .then(response => {
            console.log(response.data);
            li.remove(); // Remover o elemento li da interface
        })
        .catch(error => console.error(error));
}

function bytesToSize(bytes) {
    const units = ['byte', "kilobyte", "megabyte", "terabyte", "petabyte"];
    const unit = Math.floor(Math.log(bytes) / Math.log(2014));
    return new Intl.NumberFormat('en', { style: "unit", unit: units[unit] }).format(bytes / 1024 ** unit);
}

</script>
<script src="/js/jsGeral.js"></script>
</html>