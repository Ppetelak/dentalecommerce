<h1>Pagamento</h1>

<div class="form-group">
    <label for="formaPagamento">Forma de Pagamento:</label>
    
    <% pagamentos.forEach(function (pagamento) { %>
        <div class="custom-control custom-radio">
            <input type="radio" 
                   id="formaPagamentoId-<%= pagamento.id %>" 
                   name="formaPagamento" 
                   class="custom-control-input" 
                   value="<%= pagamento.id %>" 
                   data-id-tipo="<%= pagamento.parametrizacao %>" 
                   required>
                   
            <label class="custom-control-label" for="formaPagamentoId-<%= pagamento.id %>">
                <%= pagamento.descricao %>
                <% if (pagamento.parametrizacao === 'À vista') { %>
                    <strong> Valor Total Pago:</strong> R$ <%= pagamento.valor_total_pgto %>
                <% } else { %>
                    <strong> Valor Mensal:</strong> R$ <%= pagamento.valor_parcela_minima %>
                    <strong> Valor Total Pago:</strong> R$ <%= pagamento.valor_total_pgto %>
                <% } %>
            </label>
        </div>
    <% }) %>
    
    <div id="dataVencimentoContainer" class="mt-3"></div>
</div>

<!-- Modal para Tabela de Faixas de Vencimento -->
<div class="modal fade" id="faixasVencimentoModal" tabindex="-1" aria-labelledby="faixasVencimentoModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="faixasVencimentoModalLabel">Tabela de Faixas de Vencimento e Vigência</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>Início da Faixa</th>
              <th>Final da Faixa</th>
              <th>Data de Vigência/Vencimento Próximo</th>
            </tr>
          </thead>
          <tbody>
            <tr><td>1</td><td>5</td><td>10</td></tr>
            <tr><td>6</td><td>10</td><td>15</td></tr>
            <tr><td>11</td><td>15</td><td>20</td></tr>
            <tr><td>16</td><td>20</td><td>25</td></tr>
            <tr><td>21</td><td>25</td><td>30</td></tr>
            <tr><td>26</td><td>31</td><td>5</td></tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // Função para calcular a próxima data válida com pelo menos 2 dias úteis
    const calcularProximaDataUtil = (dias) => {
        const data = new Date();
        let diasRestantes = dias;
        
        while (diasRestantes > 0) {
            data.setDate(data.getDate() + 1);
            const diaSemana = data.getDay();
            // 0 = Domingo, 6 = Sábado (dias não úteis)
            if (diaSemana !== 0 && diaSemana !== 6) {
                diasRestantes--;
            }
        }
        return data;
    };

    // Função para calcular a data máxima de 30 dias a partir de hoje
    const calcularDataMaxima = () => {
        const dataMaxima = new Date();
        dataMaxima.setDate(dataMaxima.getDate() + 30);
        return dataMaxima;
    };
    
    document.querySelectorAll('input[name="formaPagamento"]').forEach(function (radio) {
        radio.addEventListener('change', function () {
            const dataVencimentoContainer = document.getElementById('dataVencimentoContainer');
            const selectedPaymentType = this.getAttribute('data-id-tipo');

            // Limpa o contêiner ao mudar a seleção
            dataVencimentoContainer.innerHTML = '';

            // Exibe o seletor de data somente se o tipo de pagamento for diferente de 'À vista'
            if (selectedPaymentType !== 'À vista') {
                // Calcula a data mínima de vencimento com 2 dias úteis a partir de hoje
                const dataMinima = calcularProximaDataUtil(2);
                
                // Formata a data mínima para o formato yyyy-mm-dd
                const dataMinimaFormatada = dataMinima.toISOString().split('T')[0];

                // Calcula a data máxima de 30 dias a partir de hoje
                const dataMaxima = calcularDataMaxima();
                const dataMaximaFormatada = dataMaxima.toISOString().split('T')[0];

                // Adiciona o seletor de data no contêiner
                dataVencimentoContainer.innerHTML = `
                    <div id="dataVencimentoEscolha" class="mb-3">
                        <label class="form-label">Escolha a data do primeiro pagamento</label>
                        <input type="date" class="form-control" name="dataVencimento" 
                               min="${dataMinimaFormatada}" max="${dataMaximaFormatada}">
                        <small class="form-text text-muted mt-2">
                            Somente é possível selecionar datas com pelo menos dois dias úteis a partir do dia atual e até 30 dias no máximo.<br>
                            <a href="#" data-bs-toggle="modal" data-bs-target="#faixasVencimentoModal">Consulte aqui a tabela de faixas de vencimento e vigência/vencimentos próximos</a>
                        </small>
                    </div>
                `;
            }
        });
    });
});
</script>

<!-- Bootstrap 5 CSS and JS (inclua estas linhas no cabeçalho do seu HTML) -->
