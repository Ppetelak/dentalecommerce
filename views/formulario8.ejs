<h1>Pagamento</h1>

<div class="form-group">
    <label for="formaPagamento">Forma de Pagamento:</label>
    
    <% pagamentos.forEach(function (pagamento) { %>
        <div class="custom-control custom-radio">
            <input type="radio" 
                   id="formaPagamentoId-<%= pagamento.id %>" 
                   name="formaPagamento" 
                   class="custom-control-input" 
                   value="<%= pagamento.id %>" 
                   data-id-tipo="<%= pagamento.parametrizacao %>" 
                   required>
                   
            <label class="custom-control-label" for="formaPagamentoId-<%= pagamento.id %>">
                <%= pagamento.descricao %>
                <% if (pagamento.parametrizacao === 'À vista') { %>
                    <strong> Valor Total Pago:</strong> R$ <%= pagamento.valor_total_pgto %>
                <% } else { %>
                    <strong> Valor Mensal:</strong> R$ <%= pagamento.valor_parcela_minima %>
                    <strong> Valor Total Pago:</strong> R$ <%= pagamento.valor_total_pgto %>
                <% } %>
            </label>
        </div>
    <% }) %>
    
    <div id="dataVencimentoContainer" class="mt-3"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('input[name="formaPagamento"]').forEach(function (radio) {
        radio.addEventListener('change', function () {
            const dataVencimentoContainer = document.getElementById('dataVencimentoContainer');
            const selectedPaymentType = this.getAttribute('data-id-tipo');

            // Limpa o contêiner ao mudar a seleção
            dataVencimentoContainer.innerHTML = '';

            if (selectedPaymentType !== 'À vista') {
                // Fazer uma chamada para a API para obter os vencimentos
                fetch('/api/vencimentos')
                    .then(response => response.json())
                    .then(vencimentos => {
                        const simulatedDate = new Date(2024, 10, 4, 16);
                        const now = simulatedDate;
                        //const now = new Date();
                        const currentDay = now.getDate();
                        const currentHour = now.getHours();

                        // Ordena os vencimentos pelo dia inicial
                        vencimentos.sort((a, b) => a.pagamento1 - b.pagamento1);

                        // Função para verificar se o dia cai em um final de semana
                        const isWeekend = (day, month) => {
                            const date = new Date(now.getFullYear(), month, day);
                            const weekDay = date.getDay();
                            return weekDay === 0 || weekDay === 6;
                        };

                        // Filtra as opções de vencimento com base no dia e hora atuais
                        const filteredOptions = vencimentos.filter(vencimento => {
                            if (isWeekend(vencimento.pagamento2 - 1, now.getMonth())) {
                                return false;
                            }
                            if (currentDay >= vencimento.pagamento2) {
                                return false;
                            }
                            if (currentDay >= vencimento.pagamento1 && currentDay <= vencimento.pagamento2) {
                                return currentHour < 17;
                            }
                            return true;
                        });

                        // Renderiza o select com as opções filtradas
                        let optionsHTML = filteredOptions.map(vencimento => 
                            `<option value="${vencimento.id}">De ${vencimento.pagamento1} até ${vencimento.pagamento2}</option>`
                        ).join('');

                        dataVencimentoContainer.innerHTML = `
                            <div id="dataVencimentoEscolha" class="mb-3">
                                <label class="form-label">Escolha os melhores dias para o primeiro pagamento</label>
                                <select class="form-select" name="dataVencimento">
                                    ${optionsHTML}
                                </select>
                            </div>
                        `;
                    })
                    .catch(error => console.error('Erro ao carregar vencimentos:', error));
            }
        });
    });
});
</script>
